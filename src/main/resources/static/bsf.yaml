openapi: 3.0.2
info:
  title: BSF Finance
  description:  Handle transactions between accounts
  version: 0.0.1

servers:
  - url: '{protocol}://{server}:{port}/{basePath}'
    description: Open API
    variables:
      protocol:
        enum:
          - 'http'
        default: 'http'
      server:
        default: 'bsf'
      port:
        enum:
          - '80'
        default: '80'
      basePath:
        default: 'api'
  - url: '{protocol}://{server}:{port}'
    description: Internal API
    variables:
      protocol:
        enum:
          - 'http'
          - 'https'
        default: 'http'
      server:
        default: 'bsf'
      port:
        enum:
          - '80'
          - '443'
        default: '80'

paths:
  '/transfer':
    post:
      tags:
        - money transfer
      summary: transfer money
      description: money transfer among two accounts
      operationId: 'moneyTransfer'
      requestBody:
        description: The SMH message request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestBody'
        required: true
      responses:
        '200':
          description: ok
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TransferResponseEntity'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  '/account/{accountNumber}':
    get:
      tags:
        - get account details
      parameters:
        - name: accountNumber
          in: path
          description: Unique identifier for bank account.
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 255
      responses:
        '200':
          description: ok
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'



components:
  schemas:
    TransferRequestBody:
      type: object
      description: money transfer object.
      required:
        - creditAccount
        - debitAccount
        - amount
      properties:
        creditAccount:
          type: string
          description: credit account.
          example: 298736454253
          minLength: 0
          maxLength: 255
        debitAccount:
          type: string
          description: debit account.
          example: 65839743884
        amount:
          type: number
          description:  amount to transfer.
          example: 100.50

    TransferResponseEntity:
      type: object
      properties:
        creditAccount:
          type: object
          description: account that money will conduct from.
          $ref: "#/components/schemas/Account"
        debitAccount:
          type: object
          description: account that money will conduct from.
          $ref: "#/components/schemas/Account"
        amount:
          type: number


    Account:
      type: object
      properties:
        accountNumber:
          type: string
          description: account number
        balance:
          type: number
          description: currenct balance
        name:
          type: string
          description: account number
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 500
        detail:
          type: string
          nullable: true

        instance:
          type: string
          format: uri


